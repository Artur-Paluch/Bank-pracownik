#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Bank
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Bank")]
	public partial class LINQBazaBankDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertKlienci(Klienci instance);
    partial void UpdateKlienci(Klienci instance);
    partial void DeleteKlienci(Klienci instance);
    partial void InsertKredyty(Kredyty instance);
    partial void UpdateKredyty(Kredyty instance);
    partial void DeleteKredyty(Kredyty instance);
    partial void InsertLokaty(Lokaty instance);
    partial void UpdateLokaty(Lokaty instance);
    partial void DeleteLokaty(Lokaty instance);
    partial void InsertPracownicy(Pracownicy instance);
    partial void UpdatePracownicy(Pracownicy instance);
    partial void DeletePracownicy(Pracownicy instance);
    partial void InsertPrzelewy(Przelewy instance);
    partial void UpdatePrzelewy(Przelewy instance);
    partial void DeletePrzelewy(Przelewy instance);
    partial void InsertRodzaje_kredytów(Rodzaje_kredytów instance);
    partial void UpdateRodzaje_kredytów(Rodzaje_kredytów instance);
    partial void DeleteRodzaje_kredytów(Rodzaje_kredytów instance);
    partial void InsertRodzaje_lokat(Rodzaje_lokat instance);
    partial void UpdateRodzaje_lokat(Rodzaje_lokat instance);
    partial void DeleteRodzaje_lokat(Rodzaje_lokat instance);
    #endregion
		
		public LINQBazaBankDataContext() : 
				base(global::Bank.Properties.Settings.Default.BankConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public LINQBazaBankDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LINQBazaBankDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LINQBazaBankDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LINQBazaBankDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Klienci> Klienci
		{
			get
			{
				return this.GetTable<Klienci>();
			}
		}
		
		public System.Data.Linq.Table<Kredyty> Kredyty
		{
			get
			{
				return this.GetTable<Kredyty>();
			}
		}
		
		public System.Data.Linq.Table<Lokaty> Lokaty
		{
			get
			{
				return this.GetTable<Lokaty>();
			}
		}
		
		public System.Data.Linq.Table<Pracownicy> Pracownicy
		{
			get
			{
				return this.GetTable<Pracownicy>();
			}
		}
		
		public System.Data.Linq.Table<Przelewy> Przelewy
		{
			get
			{
				return this.GetTable<Przelewy>();
			}
		}
		
		public System.Data.Linq.Table<Rodzaje_kredytów> Rodzaje_kredytów
		{
			get
			{
				return this.GetTable<Rodzaje_kredytów>();
			}
		}
		
		public System.Data.Linq.Table<Rodzaje_lokat> Rodzaje_lokat
		{
			get
			{
				return this.GetTable<Rodzaje_lokat>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Klienci")]
	public partial class Klienci : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_klienta;
		
		private string _Imię;
		
		private string _Nazwisko;
		
		private string _Password;
		
		private int _Numer_rachunku;
		
		private System.DateTime _Data_założenia;
		
		private int _Telefon;
		
		private string _Miasto;
		
		private string _Ulica;
		
		private bool _zaznaczony;
		
		private decimal _Środki;
		
		private System.Nullable<bool> _aktywny;
		
		private EntitySet<Kredyty> _Kredyty;
		
		private EntitySet<Lokaty> _Lokaty;
		
		private EntitySet<Przelewy> _Przelewy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_klientaChanging(int value);
    partial void OnId_klientaChanged();
    partial void OnImięChanging(string value);
    partial void OnImięChanged();
    partial void OnNazwiskoChanging(string value);
    partial void OnNazwiskoChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnNumer_rachunkuChanging(int value);
    partial void OnNumer_rachunkuChanged();
    partial void OnData_założeniaChanging(System.DateTime value);
    partial void OnData_założeniaChanged();
    partial void OnTelefonChanging(int value);
    partial void OnTelefonChanged();
    partial void OnMiastoChanging(string value);
    partial void OnMiastoChanged();
    partial void OnUlicaChanging(string value);
    partial void OnUlicaChanged();
    partial void OnzaznaczonyChanging(bool value);
    partial void OnzaznaczonyChanged();
    partial void OnŚrodkiChanging(decimal value);
    partial void OnŚrodkiChanged();
    partial void OnaktywnyChanging(System.Nullable<bool> value);
    partial void OnaktywnyChanged();
    #endregion
		
		public Klienci()
		{
			this._Kredyty = new EntitySet<Kredyty>(new Action<Kredyty>(this.attach_Kredyty), new Action<Kredyty>(this.detach_Kredyty));
			this._Lokaty = new EntitySet<Lokaty>(new Action<Lokaty>(this.attach_Lokaty), new Action<Lokaty>(this.detach_Lokaty));
			this._Przelewy = new EntitySet<Przelewy>(new Action<Przelewy>(this.attach_Przelewy), new Action<Przelewy>(this.detach_Przelewy));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Id klienta]", Storage="_Id_klienta", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_klienta
		{
			get
			{
				return this._Id_klienta;
			}
			set
			{
				if ((this._Id_klienta != value))
				{
					this.OnId_klientaChanging(value);
					this.SendPropertyChanging();
					this._Id_klienta = value;
					this.SendPropertyChanged("Id_klienta");
					this.OnId_klientaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Imię", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Imię
		{
			get
			{
				return this._Imię;
			}
			set
			{
				if ((this._Imię != value))
				{
					this.OnImięChanging(value);
					this.SendPropertyChanging();
					this._Imię = value;
					this.SendPropertyChanged("Imię");
					this.OnImięChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwisko", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Nazwisko
		{
			get
			{
				return this._Nazwisko;
			}
			set
			{
				if ((this._Nazwisko != value))
				{
					this.OnNazwiskoChanging(value);
					this.SendPropertyChanging();
					this._Nazwisko = value;
					this.SendPropertyChanged("Nazwisko");
					this.OnNazwiskoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Numer rachunku]", Storage="_Numer_rachunku", DbType="Int NOT NULL")]
		public int Numer_rachunku
		{
			get
			{
				return this._Numer_rachunku;
			}
			set
			{
				if ((this._Numer_rachunku != value))
				{
					this.OnNumer_rachunkuChanging(value);
					this.SendPropertyChanging();
					this._Numer_rachunku = value;
					this.SendPropertyChanged("Numer_rachunku");
					this.OnNumer_rachunkuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Data założenia]", Storage="_Data_założenia", DbType="Date NOT NULL")]
		public System.DateTime Data_założenia
		{
			get
			{
				return this._Data_założenia;
			}
			set
			{
				if ((this._Data_założenia != value))
				{
					this.OnData_założeniaChanging(value);
					this.SendPropertyChanging();
					this._Data_założenia = value;
					this.SendPropertyChanged("Data_założenia");
					this.OnData_założeniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefon", DbType="Int NOT NULL")]
		public int Telefon
		{
			get
			{
				return this._Telefon;
			}
			set
			{
				if ((this._Telefon != value))
				{
					this.OnTelefonChanging(value);
					this.SendPropertyChanging();
					this._Telefon = value;
					this.SendPropertyChanged("Telefon");
					this.OnTelefonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Miasto", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Miasto
		{
			get
			{
				return this._Miasto;
			}
			set
			{
				if ((this._Miasto != value))
				{
					this.OnMiastoChanging(value);
					this.SendPropertyChanging();
					this._Miasto = value;
					this.SendPropertyChanged("Miasto");
					this.OnMiastoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ulica", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Ulica
		{
			get
			{
				return this._Ulica;
			}
			set
			{
				if ((this._Ulica != value))
				{
					this.OnUlicaChanging(value);
					this.SendPropertyChanging();
					this._Ulica = value;
					this.SendPropertyChanged("Ulica");
					this.OnUlicaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zaznaczony", DbType="Bit NOT NULL")]
		public bool zaznaczony
		{
			get
			{
				return this._zaznaczony;
			}
			set
			{
				if ((this._zaznaczony != value))
				{
					this.OnzaznaczonyChanging(value);
					this.SendPropertyChanging();
					this._zaznaczony = value;
					this.SendPropertyChanged("zaznaczony");
					this.OnzaznaczonyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Środki", DbType="Decimal(18,0) NOT NULL")]
		public decimal Środki
		{
			get
			{
				return this._Środki;
			}
			set
			{
				if ((this._Środki != value))
				{
					this.OnŚrodkiChanging(value);
					this.SendPropertyChanging();
					this._Środki = value;
					this.SendPropertyChanged("Środki");
					this.OnŚrodkiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aktywny", DbType="Bit")]
		public System.Nullable<bool> aktywny
		{
			get
			{
				return this._aktywny;
			}
			set
			{
				if ((this._aktywny != value))
				{
					this.OnaktywnyChanging(value);
					this.SendPropertyChanging();
					this._aktywny = value;
					this.SendPropertyChanged("aktywny");
					this.OnaktywnyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Klienci_Kredyty", Storage="_Kredyty", ThisKey="Id_klienta", OtherKey="Klient")]
		public EntitySet<Kredyty> Kredyty
		{
			get
			{
				return this._Kredyty;
			}
			set
			{
				this._Kredyty.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Klienci_Lokaty", Storage="_Lokaty", ThisKey="Id_klienta", OtherKey="Klient")]
		public EntitySet<Lokaty> Lokaty
		{
			get
			{
				return this._Lokaty;
			}
			set
			{
				this._Lokaty.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Klienci_Przelewy", Storage="_Przelewy", ThisKey="Id_klienta", OtherKey="Nadawca")]
		public EntitySet<Przelewy> Przelewy
		{
			get
			{
				return this._Przelewy;
			}
			set
			{
				this._Przelewy.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Kredyty(Kredyty entity)
		{
			this.SendPropertyChanging();
			entity.Klienci = this;
		}
		
		private void detach_Kredyty(Kredyty entity)
		{
			this.SendPropertyChanging();
			entity.Klienci = null;
		}
		
		private void attach_Lokaty(Lokaty entity)
		{
			this.SendPropertyChanging();
			entity.Klienci = this;
		}
		
		private void detach_Lokaty(Lokaty entity)
		{
			this.SendPropertyChanging();
			entity.Klienci = null;
		}
		
		private void attach_Przelewy(Przelewy entity)
		{
			this.SendPropertyChanging();
			entity.Klienci = this;
		}
		
		private void detach_Przelewy(Przelewy entity)
		{
			this.SendPropertyChanging();
			entity.Klienci = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kredyty")]
	public partial class Kredyty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Kredytu;
		
		private System.Nullable<int> _Klient;
		
		private System.Nullable<int> _Rodzaj_kredytu;
		
		private decimal _Kwota_kredytu;
		
		private System.Nullable<int> _Kredytu_udzielił;
		
		private System.Nullable<bool> _zaznaczony;
		
		private System.Nullable<System.DateTime> _Data_założenia;
		
		private bool _aktywny;
		
		private EntityRef<Klienci> _Klienci;
		
		private EntityRef<Pracownicy> _Pracownicy;
		
		private EntityRef<Rodzaje_kredytów> _Rodzaje_kredytów;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_KredytuChanging(int value);
    partial void OnId_KredytuChanged();
    partial void OnKlientChanging(System.Nullable<int> value);
    partial void OnKlientChanged();
    partial void OnRodzaj_kredytuChanging(System.Nullable<int> value);
    partial void OnRodzaj_kredytuChanged();
    partial void OnKwota_kredytuChanging(decimal value);
    partial void OnKwota_kredytuChanged();
    partial void OnKredytu_udzieliłChanging(System.Nullable<int> value);
    partial void OnKredytu_udzieliłChanged();
    partial void OnzaznaczonyChanging(System.Nullable<bool> value);
    partial void OnzaznaczonyChanged();
    partial void OnData_założeniaChanging(System.Nullable<System.DateTime> value);
    partial void OnData_założeniaChanged();
    partial void OnaktywnyChanging(bool value);
    partial void OnaktywnyChanged();
    #endregion
		
		public Kredyty()
		{
			this._Klienci = default(EntityRef<Klienci>);
			this._Pracownicy = default(EntityRef<Pracownicy>);
			this._Rodzaje_kredytów = default(EntityRef<Rodzaje_kredytów>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Id Kredytu]", Storage="_Id_Kredytu", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_Kredytu
		{
			get
			{
				return this._Id_Kredytu;
			}
			set
			{
				if ((this._Id_Kredytu != value))
				{
					this.OnId_KredytuChanging(value);
					this.SendPropertyChanging();
					this._Id_Kredytu = value;
					this.SendPropertyChanged("Id_Kredytu");
					this.OnId_KredytuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Klient", DbType="Int")]
		public System.Nullable<int> Klient
		{
			get
			{
				return this._Klient;
			}
			set
			{
				if ((this._Klient != value))
				{
					if (this._Klienci.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKlientChanging(value);
					this.SendPropertyChanging();
					this._Klient = value;
					this.SendPropertyChanged("Klient");
					this.OnKlientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Rodzaj kredytu]", Storage="_Rodzaj_kredytu", DbType="Int")]
		public System.Nullable<int> Rodzaj_kredytu
		{
			get
			{
				return this._Rodzaj_kredytu;
			}
			set
			{
				if ((this._Rodzaj_kredytu != value))
				{
					this.OnRodzaj_kredytuChanging(value);
					this.SendPropertyChanging();
					this._Rodzaj_kredytu = value;
					this.SendPropertyChanged("Rodzaj_kredytu");
					this.OnRodzaj_kredytuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Kwota kredytu]", Storage="_Kwota_kredytu", DbType="Money NOT NULL")]
		public decimal Kwota_kredytu
		{
			get
			{
				return this._Kwota_kredytu;
			}
			set
			{
				if ((this._Kwota_kredytu != value))
				{
					this.OnKwota_kredytuChanging(value);
					this.SendPropertyChanging();
					this._Kwota_kredytu = value;
					this.SendPropertyChanged("Kwota_kredytu");
					this.OnKwota_kredytuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Kredytu udzielił]", Storage="_Kredytu_udzielił", DbType="Int")]
		public System.Nullable<int> Kredytu_udzielił
		{
			get
			{
				return this._Kredytu_udzielił;
			}
			set
			{
				if ((this._Kredytu_udzielił != value))
				{
					this.OnKredytu_udzieliłChanging(value);
					this.SendPropertyChanging();
					this._Kredytu_udzielił = value;
					this.SendPropertyChanged("Kredytu_udzielił");
					this.OnKredytu_udzieliłChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zaznaczony", DbType="Bit")]
		public System.Nullable<bool> zaznaczony
		{
			get
			{
				return this._zaznaczony;
			}
			set
			{
				if ((this._zaznaczony != value))
				{
					this.OnzaznaczonyChanging(value);
					this.SendPropertyChanging();
					this._zaznaczony = value;
					this.SendPropertyChanged("zaznaczony");
					this.OnzaznaczonyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Data założenia]", Storage="_Data_założenia", DbType="Date")]
		public System.Nullable<System.DateTime> Data_założenia
		{
			get
			{
				return this._Data_założenia;
			}
			set
			{
				if ((this._Data_założenia != value))
				{
					this.OnData_założeniaChanging(value);
					this.SendPropertyChanging();
					this._Data_założenia = value;
					this.SendPropertyChanged("Data_założenia");
					this.OnData_założeniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aktywny", DbType="Bit NOT NULL")]
		public bool aktywny
		{
			get
			{
				return this._aktywny;
			}
			set
			{
				if ((this._aktywny != value))
				{
					this.OnaktywnyChanging(value);
					this.SendPropertyChanging();
					this._aktywny = value;
					this.SendPropertyChanged("aktywny");
					this.OnaktywnyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Klienci_Kredyty", Storage="_Klienci", ThisKey="Klient", OtherKey="Id_klienta", IsForeignKey=true, DeleteRule="SET NULL")]
		public Klienci Klienci
		{
			get
			{
				return this._Klienci.Entity;
			}
			set
			{
				Klienci previousValue = this._Klienci.Entity;
				if (((previousValue != value) 
							|| (this._Klienci.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Klienci.Entity = null;
						previousValue.Kredyty.Remove(this);
					}
					this._Klienci.Entity = value;
					if ((value != null))
					{
						value.Kredyty.Add(this);
						this._Klient = value.Id_klienta;
					}
					else
					{
						this._Klient = default(Nullable<int>);
					}
					this.SendPropertyChanged("Klienci");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pracownicy_Kredyty", Storage="_Pracownicy", ThisKey="Kredytu_udzielił", OtherKey="Id_Pracownika", IsForeignKey=true, DeleteRule="SET NULL")]
		public Pracownicy Pracownicy
		{
			get
			{
				return this._Pracownicy.Entity;
			}
			set
			{
				Pracownicy previousValue = this._Pracownicy.Entity;
				if (((previousValue != value) 
							|| (this._Pracownicy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pracownicy.Entity = null;
						previousValue.Kredyty.Remove(this);
					}
					this._Pracownicy.Entity = value;
					if ((value != null))
					{
						value.Kredyty.Add(this);
						this._Kredytu_udzielił = value.Id_Pracownika;
					}
					else
					{
						this._Kredytu_udzielił = default(Nullable<int>);
					}
					this.SendPropertyChanged("Pracownicy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rodzaje_kredytów_Kredyty", Storage="_Rodzaje_kredytów", ThisKey="Rodzaj_kredytu", OtherKey="Id_rodzaju_kredytu", IsForeignKey=true, DeleteRule="SET NULL")]
		public Rodzaje_kredytów Rodzaje_kredytów
		{
			get
			{
				return this._Rodzaje_kredytów.Entity;
			}
			set
			{
				Rodzaje_kredytów previousValue = this._Rodzaje_kredytów.Entity;
				if (((previousValue != value) 
							|| (this._Rodzaje_kredytów.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rodzaje_kredytów.Entity = null;
						previousValue.Kredyty.Remove(this);
					}
					this._Rodzaje_kredytów.Entity = value;
					if ((value != null))
					{
						value.Kredyty.Add(this);
						this._Rodzaj_kredytu = value.Id_rodzaju_kredytu;
					}
					else
					{
						this._Rodzaj_kredytu = default(Nullable<int>);
					}
					this.SendPropertyChanged("Rodzaje_kredytów");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lokaty")]
	public partial class Lokaty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Lokaty;
		
		private decimal _Wysokość_lokaty;
		
		private System.Nullable<int> _Klient;
		
		private System.Nullable<int> _Id_Rodzaju_lokaty;
		
		private System.Nullable<int> _Lokaty_udzielił;
		
		private System.Nullable<bool> _zaznaczony;
		
		private System.Nullable<System.DateTime> _Data_założenia;
		
		private bool _aktywny;
		
		private EntityRef<Klienci> _Klienci;
		
		private EntityRef<Pracownicy> _Pracownicy;
		
		private EntityRef<Rodzaje_lokat> _Rodzaje_lokat;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_LokatyChanging(int value);
    partial void OnId_LokatyChanged();
    partial void OnWysokość_lokatyChanging(decimal value);
    partial void OnWysokość_lokatyChanged();
    partial void OnKlientChanging(System.Nullable<int> value);
    partial void OnKlientChanged();
    partial void OnId_Rodzaju_lokatyChanging(System.Nullable<int> value);
    partial void OnId_Rodzaju_lokatyChanged();
    partial void OnLokaty_udzieliłChanging(System.Nullable<int> value);
    partial void OnLokaty_udzieliłChanged();
    partial void OnzaznaczonyChanging(System.Nullable<bool> value);
    partial void OnzaznaczonyChanged();
    partial void OnData_założeniaChanging(System.Nullable<System.DateTime> value);
    partial void OnData_założeniaChanged();
    partial void OnaktywnyChanging(bool value);
    partial void OnaktywnyChanged();
    #endregion
		
		public Lokaty()
		{
			this._Klienci = default(EntityRef<Klienci>);
			this._Pracownicy = default(EntityRef<Pracownicy>);
			this._Rodzaje_lokat = default(EntityRef<Rodzaje_lokat>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Id Lokaty]", Storage="_Id_Lokaty", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_Lokaty
		{
			get
			{
				return this._Id_Lokaty;
			}
			set
			{
				if ((this._Id_Lokaty != value))
				{
					this.OnId_LokatyChanging(value);
					this.SendPropertyChanging();
					this._Id_Lokaty = value;
					this.SendPropertyChanged("Id_Lokaty");
					this.OnId_LokatyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Wysokość lokaty]", Storage="_Wysokość_lokaty", DbType="Money NOT NULL")]
		public decimal Wysokość_lokaty
		{
			get
			{
				return this._Wysokość_lokaty;
			}
			set
			{
				if ((this._Wysokość_lokaty != value))
				{
					this.OnWysokość_lokatyChanging(value);
					this.SendPropertyChanging();
					this._Wysokość_lokaty = value;
					this.SendPropertyChanged("Wysokość_lokaty");
					this.OnWysokość_lokatyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Klient", DbType="Int")]
		public System.Nullable<int> Klient
		{
			get
			{
				return this._Klient;
			}
			set
			{
				if ((this._Klient != value))
				{
					if (this._Klienci.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKlientChanging(value);
					this.SendPropertyChanging();
					this._Klient = value;
					this.SendPropertyChanged("Klient");
					this.OnKlientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Id Rodzaju lokaty]", Storage="_Id_Rodzaju_lokaty", DbType="Int")]
		public System.Nullable<int> Id_Rodzaju_lokaty
		{
			get
			{
				return this._Id_Rodzaju_lokaty;
			}
			set
			{
				if ((this._Id_Rodzaju_lokaty != value))
				{
					this.OnId_Rodzaju_lokatyChanging(value);
					this.SendPropertyChanging();
					this._Id_Rodzaju_lokaty = value;
					this.SendPropertyChanged("Id_Rodzaju_lokaty");
					this.OnId_Rodzaju_lokatyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Lokaty udzielił]", Storage="_Lokaty_udzielił", DbType="Int")]
		public System.Nullable<int> Lokaty_udzielił
		{
			get
			{
				return this._Lokaty_udzielił;
			}
			set
			{
				if ((this._Lokaty_udzielił != value))
				{
					this.OnLokaty_udzieliłChanging(value);
					this.SendPropertyChanging();
					this._Lokaty_udzielił = value;
					this.SendPropertyChanged("Lokaty_udzielił");
					this.OnLokaty_udzieliłChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zaznaczony", DbType="Bit")]
		public System.Nullable<bool> zaznaczony
		{
			get
			{
				return this._zaznaczony;
			}
			set
			{
				if ((this._zaznaczony != value))
				{
					this.OnzaznaczonyChanging(value);
					this.SendPropertyChanging();
					this._zaznaczony = value;
					this.SendPropertyChanged("zaznaczony");
					this.OnzaznaczonyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Data założenia]", Storage="_Data_założenia", DbType="Date")]
		public System.Nullable<System.DateTime> Data_założenia
		{
			get
			{
				return this._Data_założenia;
			}
			set
			{
				if ((this._Data_założenia != value))
				{
					this.OnData_założeniaChanging(value);
					this.SendPropertyChanging();
					this._Data_założenia = value;
					this.SendPropertyChanged("Data_założenia");
					this.OnData_założeniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aktywny", DbType="Bit NOT NULL")]
		public bool aktywny
		{
			get
			{
				return this._aktywny;
			}
			set
			{
				if ((this._aktywny != value))
				{
					this.OnaktywnyChanging(value);
					this.SendPropertyChanging();
					this._aktywny = value;
					this.SendPropertyChanged("aktywny");
					this.OnaktywnyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Klienci_Lokaty", Storage="_Klienci", ThisKey="Klient", OtherKey="Id_klienta", IsForeignKey=true, DeleteRule="SET NULL")]
		public Klienci Klienci
		{
			get
			{
				return this._Klienci.Entity;
			}
			set
			{
				Klienci previousValue = this._Klienci.Entity;
				if (((previousValue != value) 
							|| (this._Klienci.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Klienci.Entity = null;
						previousValue.Lokaty.Remove(this);
					}
					this._Klienci.Entity = value;
					if ((value != null))
					{
						value.Lokaty.Add(this);
						this._Klient = value.Id_klienta;
					}
					else
					{
						this._Klient = default(Nullable<int>);
					}
					this.SendPropertyChanged("Klienci");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pracownicy_Lokaty", Storage="_Pracownicy", ThisKey="Lokaty_udzielił", OtherKey="Id_Pracownika", IsForeignKey=true, DeleteRule="SET NULL")]
		public Pracownicy Pracownicy
		{
			get
			{
				return this._Pracownicy.Entity;
			}
			set
			{
				Pracownicy previousValue = this._Pracownicy.Entity;
				if (((previousValue != value) 
							|| (this._Pracownicy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pracownicy.Entity = null;
						previousValue.Lokaty.Remove(this);
					}
					this._Pracownicy.Entity = value;
					if ((value != null))
					{
						value.Lokaty.Add(this);
						this._Lokaty_udzielił = value.Id_Pracownika;
					}
					else
					{
						this._Lokaty_udzielił = default(Nullable<int>);
					}
					this.SendPropertyChanged("Pracownicy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rodzaje_lokat_Lokaty", Storage="_Rodzaje_lokat", ThisKey="Id_Rodzaju_lokaty", OtherKey="Id_rodzaju_lokaty", IsForeignKey=true, DeleteRule="SET NULL")]
		public Rodzaje_lokat Rodzaje_lokat
		{
			get
			{
				return this._Rodzaje_lokat.Entity;
			}
			set
			{
				Rodzaje_lokat previousValue = this._Rodzaje_lokat.Entity;
				if (((previousValue != value) 
							|| (this._Rodzaje_lokat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rodzaje_lokat.Entity = null;
						previousValue.Lokaty.Remove(this);
					}
					this._Rodzaje_lokat.Entity = value;
					if ((value != null))
					{
						value.Lokaty.Add(this);
						this._Id_Rodzaju_lokaty = value.Id_rodzaju_lokaty;
					}
					else
					{
						this._Id_Rodzaju_lokaty = default(Nullable<int>);
					}
					this.SendPropertyChanged("Rodzaje_lokat");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pracownicy")]
	public partial class Pracownicy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Pracownika;
		
		private string _Imię_pracownika;
		
		private string _Nazwisko_pracownika;
		
		private string _PESEL;
		
		private decimal _Wynagrodzenie;
		
		private System.DateTime _Data_zatrudnienia;
		
		private string _Password;
		
		private bool _zaznaczony;
		
		private System.Nullable<int> _Telefon;
		
		private System.Nullable<bool> _aktywny;
		
		private EntitySet<Kredyty> _Kredyty;
		
		private EntitySet<Lokaty> _Lokaty;
		
		private EntitySet<Rodzaje_kredytów> _Rodzaje_kredytów;
		
		private EntitySet<Rodzaje_lokat> _Rodzaje_lokat;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_PracownikaChanging(int value);
    partial void OnId_PracownikaChanged();
    partial void OnImię_pracownikaChanging(string value);
    partial void OnImię_pracownikaChanged();
    partial void OnNazwisko_pracownikaChanging(string value);
    partial void OnNazwisko_pracownikaChanged();
    partial void OnPESELChanging(string value);
    partial void OnPESELChanged();
    partial void OnWynagrodzenieChanging(decimal value);
    partial void OnWynagrodzenieChanged();
    partial void OnData_zatrudnieniaChanging(System.DateTime value);
    partial void OnData_zatrudnieniaChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnzaznaczonyChanging(bool value);
    partial void OnzaznaczonyChanged();
    partial void OnTelefonChanging(System.Nullable<int> value);
    partial void OnTelefonChanged();
    partial void OnaktywnyChanging(System.Nullable<bool> value);
    partial void OnaktywnyChanged();
    #endregion
		
		public Pracownicy()
		{
			this._Kredyty = new EntitySet<Kredyty>(new Action<Kredyty>(this.attach_Kredyty), new Action<Kredyty>(this.detach_Kredyty));
			this._Lokaty = new EntitySet<Lokaty>(new Action<Lokaty>(this.attach_Lokaty), new Action<Lokaty>(this.detach_Lokaty));
			this._Rodzaje_kredytów = new EntitySet<Rodzaje_kredytów>(new Action<Rodzaje_kredytów>(this.attach_Rodzaje_kredytów), new Action<Rodzaje_kredytów>(this.detach_Rodzaje_kredytów));
			this._Rodzaje_lokat = new EntitySet<Rodzaje_lokat>(new Action<Rodzaje_lokat>(this.attach_Rodzaje_lokat), new Action<Rodzaje_lokat>(this.detach_Rodzaje_lokat));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Id Pracownika]", Storage="_Id_Pracownika", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_Pracownika
		{
			get
			{
				return this._Id_Pracownika;
			}
			set
			{
				if ((this._Id_Pracownika != value))
				{
					this.OnId_PracownikaChanging(value);
					this.SendPropertyChanging();
					this._Id_Pracownika = value;
					this.SendPropertyChanged("Id_Pracownika");
					this.OnId_PracownikaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Imię pracownika]", Storage="_Imię_pracownika", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Imię_pracownika
		{
			get
			{
				return this._Imię_pracownika;
			}
			set
			{
				if ((this._Imię_pracownika != value))
				{
					this.OnImię_pracownikaChanging(value);
					this.SendPropertyChanging();
					this._Imię_pracownika = value;
					this.SendPropertyChanged("Imię_pracownika");
					this.OnImię_pracownikaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Nazwisko pracownika]", Storage="_Nazwisko_pracownika", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Nazwisko_pracownika
		{
			get
			{
				return this._Nazwisko_pracownika;
			}
			set
			{
				if ((this._Nazwisko_pracownika != value))
				{
					this.OnNazwisko_pracownikaChanging(value);
					this.SendPropertyChanging();
					this._Nazwisko_pracownika = value;
					this.SendPropertyChanged("Nazwisko_pracownika");
					this.OnNazwisko_pracownikaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PESEL", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string PESEL
		{
			get
			{
				return this._PESEL;
			}
			set
			{
				if ((this._PESEL != value))
				{
					this.OnPESELChanging(value);
					this.SendPropertyChanging();
					this._PESEL = value;
					this.SendPropertyChanged("PESEL");
					this.OnPESELChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wynagrodzenie", DbType="Money NOT NULL")]
		public decimal Wynagrodzenie
		{
			get
			{
				return this._Wynagrodzenie;
			}
			set
			{
				if ((this._Wynagrodzenie != value))
				{
					this.OnWynagrodzenieChanging(value);
					this.SendPropertyChanging();
					this._Wynagrodzenie = value;
					this.SendPropertyChanged("Wynagrodzenie");
					this.OnWynagrodzenieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Data zatrudnienia]", Storage="_Data_zatrudnienia", DbType="Date NOT NULL")]
		public System.DateTime Data_zatrudnienia
		{
			get
			{
				return this._Data_zatrudnienia;
			}
			set
			{
				if ((this._Data_zatrudnienia != value))
				{
					this.OnData_zatrudnieniaChanging(value);
					this.SendPropertyChanging();
					this._Data_zatrudnienia = value;
					this.SendPropertyChanged("Data_zatrudnienia");
					this.OnData_zatrudnieniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zaznaczony", DbType="Bit NOT NULL")]
		public bool zaznaczony
		{
			get
			{
				return this._zaznaczony;
			}
			set
			{
				if ((this._zaznaczony != value))
				{
					this.OnzaznaczonyChanging(value);
					this.SendPropertyChanging();
					this._zaznaczony = value;
					this.SendPropertyChanged("zaznaczony");
					this.OnzaznaczonyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefon", DbType="Int")]
		public System.Nullable<int> Telefon
		{
			get
			{
				return this._Telefon;
			}
			set
			{
				if ((this._Telefon != value))
				{
					this.OnTelefonChanging(value);
					this.SendPropertyChanging();
					this._Telefon = value;
					this.SendPropertyChanged("Telefon");
					this.OnTelefonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aktywny", DbType="Bit")]
		public System.Nullable<bool> aktywny
		{
			get
			{
				return this._aktywny;
			}
			set
			{
				if ((this._aktywny != value))
				{
					this.OnaktywnyChanging(value);
					this.SendPropertyChanging();
					this._aktywny = value;
					this.SendPropertyChanged("aktywny");
					this.OnaktywnyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pracownicy_Kredyty", Storage="_Kredyty", ThisKey="Id_Pracownika", OtherKey="Kredytu_udzielił")]
		public EntitySet<Kredyty> Kredyty
		{
			get
			{
				return this._Kredyty;
			}
			set
			{
				this._Kredyty.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pracownicy_Lokaty", Storage="_Lokaty", ThisKey="Id_Pracownika", OtherKey="Lokaty_udzielił")]
		public EntitySet<Lokaty> Lokaty
		{
			get
			{
				return this._Lokaty;
			}
			set
			{
				this._Lokaty.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pracownicy_Rodzaje_kredytów", Storage="_Rodzaje_kredytów", ThisKey="Id_Pracownika", OtherKey="Kredyt_utworzył")]
		public EntitySet<Rodzaje_kredytów> Rodzaje_kredytów
		{
			get
			{
				return this._Rodzaje_kredytów;
			}
			set
			{
				this._Rodzaje_kredytów.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pracownicy_Rodzaje_lokat", Storage="_Rodzaje_lokat", ThisKey="Id_Pracownika", OtherKey="Lokatę_utworzył")]
		public EntitySet<Rodzaje_lokat> Rodzaje_lokat
		{
			get
			{
				return this._Rodzaje_lokat;
			}
			set
			{
				this._Rodzaje_lokat.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Kredyty(Kredyty entity)
		{
			this.SendPropertyChanging();
			entity.Pracownicy = this;
		}
		
		private void detach_Kredyty(Kredyty entity)
		{
			this.SendPropertyChanging();
			entity.Pracownicy = null;
		}
		
		private void attach_Lokaty(Lokaty entity)
		{
			this.SendPropertyChanging();
			entity.Pracownicy = this;
		}
		
		private void detach_Lokaty(Lokaty entity)
		{
			this.SendPropertyChanging();
			entity.Pracownicy = null;
		}
		
		private void attach_Rodzaje_kredytów(Rodzaje_kredytów entity)
		{
			this.SendPropertyChanging();
			entity.Pracownicy = this;
		}
		
		private void detach_Rodzaje_kredytów(Rodzaje_kredytów entity)
		{
			this.SendPropertyChanging();
			entity.Pracownicy = null;
		}
		
		private void attach_Rodzaje_lokat(Rodzaje_lokat entity)
		{
			this.SendPropertyChanging();
			entity.Pracownicy = this;
		}
		
		private void detach_Rodzaje_lokat(Rodzaje_lokat entity)
		{
			this.SendPropertyChanging();
			entity.Pracownicy = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Przelewy")]
	public partial class Przelewy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Przelewu;
		
		private decimal _Kwota;
		
		private string _Nazwa_odbiorcy;
		
		private int _Numer_rachunku_odbiorcy;
		
		private string _Tytuł_przelewu;
		
		private System.DateTime _Data;
		
		private bool _zaznaczony;
		
		private System.Nullable<int> _Nadawca;
		
		private EntityRef<Klienci> _Klienci;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_PrzelewuChanging(int value);
    partial void OnId_PrzelewuChanged();
    partial void OnKwotaChanging(decimal value);
    partial void OnKwotaChanged();
    partial void OnNazwa_odbiorcyChanging(string value);
    partial void OnNazwa_odbiorcyChanged();
    partial void OnNumer_rachunku_odbiorcyChanging(int value);
    partial void OnNumer_rachunku_odbiorcyChanged();
    partial void OnTytuł_przelewuChanging(string value);
    partial void OnTytuł_przelewuChanged();
    partial void OnDataChanging(System.DateTime value);
    partial void OnDataChanged();
    partial void OnzaznaczonyChanging(bool value);
    partial void OnzaznaczonyChanged();
    partial void OnNadawcaChanging(System.Nullable<int> value);
    partial void OnNadawcaChanged();
    #endregion
		
		public Przelewy()
		{
			this._Klienci = default(EntityRef<Klienci>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Id Przelewu]", Storage="_Id_Przelewu", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_Przelewu
		{
			get
			{
				return this._Id_Przelewu;
			}
			set
			{
				if ((this._Id_Przelewu != value))
				{
					this.OnId_PrzelewuChanging(value);
					this.SendPropertyChanging();
					this._Id_Przelewu = value;
					this.SendPropertyChanged("Id_Przelewu");
					this.OnId_PrzelewuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kwota", DbType="Money NOT NULL")]
		public decimal Kwota
		{
			get
			{
				return this._Kwota;
			}
			set
			{
				if ((this._Kwota != value))
				{
					this.OnKwotaChanging(value);
					this.SendPropertyChanging();
					this._Kwota = value;
					this.SendPropertyChanged("Kwota");
					this.OnKwotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Nazwa odbiorcy]", Storage="_Nazwa_odbiorcy", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Nazwa_odbiorcy
		{
			get
			{
				return this._Nazwa_odbiorcy;
			}
			set
			{
				if ((this._Nazwa_odbiorcy != value))
				{
					this.OnNazwa_odbiorcyChanging(value);
					this.SendPropertyChanging();
					this._Nazwa_odbiorcy = value;
					this.SendPropertyChanged("Nazwa_odbiorcy");
					this.OnNazwa_odbiorcyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Numer rachunku odbiorcy]", Storage="_Numer_rachunku_odbiorcy", DbType="Int NOT NULL")]
		public int Numer_rachunku_odbiorcy
		{
			get
			{
				return this._Numer_rachunku_odbiorcy;
			}
			set
			{
				if ((this._Numer_rachunku_odbiorcy != value))
				{
					this.OnNumer_rachunku_odbiorcyChanging(value);
					this.SendPropertyChanging();
					this._Numer_rachunku_odbiorcy = value;
					this.SendPropertyChanged("Numer_rachunku_odbiorcy");
					this.OnNumer_rachunku_odbiorcyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Tytuł przelewu]", Storage="_Tytuł_przelewu", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Tytuł_przelewu
		{
			get
			{
				return this._Tytuł_przelewu;
			}
			set
			{
				if ((this._Tytuł_przelewu != value))
				{
					this.OnTytuł_przelewuChanging(value);
					this.SendPropertyChanging();
					this._Tytuł_przelewu = value;
					this.SendPropertyChanged("Tytuł_przelewu");
					this.OnTytuł_przelewuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="Date NOT NULL")]
		public System.DateTime Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zaznaczony", DbType="Bit NOT NULL")]
		public bool zaznaczony
		{
			get
			{
				return this._zaznaczony;
			}
			set
			{
				if ((this._zaznaczony != value))
				{
					this.OnzaznaczonyChanging(value);
					this.SendPropertyChanging();
					this._zaznaczony = value;
					this.SendPropertyChanged("zaznaczony");
					this.OnzaznaczonyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nadawca", DbType="Int")]
		public System.Nullable<int> Nadawca
		{
			get
			{
				return this._Nadawca;
			}
			set
			{
				if ((this._Nadawca != value))
				{
					if (this._Klienci.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNadawcaChanging(value);
					this.SendPropertyChanging();
					this._Nadawca = value;
					this.SendPropertyChanged("Nadawca");
					this.OnNadawcaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Klienci_Przelewy", Storage="_Klienci", ThisKey="Nadawca", OtherKey="Id_klienta", IsForeignKey=true, DeleteRule="SET NULL")]
		public Klienci Klienci
		{
			get
			{
				return this._Klienci.Entity;
			}
			set
			{
				Klienci previousValue = this._Klienci.Entity;
				if (((previousValue != value) 
							|| (this._Klienci.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Klienci.Entity = null;
						previousValue.Przelewy.Remove(this);
					}
					this._Klienci.Entity = value;
					if ((value != null))
					{
						value.Przelewy.Add(this);
						this._Nadawca = value.Id_klienta;
					}
					else
					{
						this._Nadawca = default(Nullable<int>);
					}
					this.SendPropertyChanged("Klienci");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Rodzaje kredytów]")]
	public partial class Rodzaje_kredytów : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_rodzaju_kredytu;
		
		private string _Nazwa;
		
		private float _Oprocentowanie;
		
		private int _Okres_kredytowania_w_mies__;
		
		private float _Prowizja;
		
		private System.Nullable<int> _Kredyt_utworzył;
		
		private bool _zaznaczony;
		
		private System.Nullable<bool> _aktywny;
		
		private EntitySet<Kredyty> _Kredyty;
		
		private EntityRef<Pracownicy> _Pracownicy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_rodzaju_kredytuChanging(int value);
    partial void OnId_rodzaju_kredytuChanged();
    partial void OnNazwaChanging(string value);
    partial void OnNazwaChanged();
    partial void OnOprocentowanieChanging(float value);
    partial void OnOprocentowanieChanged();
    partial void OnOkres_kredytowania_w_mies__Changing(int value);
    partial void OnOkres_kredytowania_w_mies__Changed();
    partial void OnProwizjaChanging(float value);
    partial void OnProwizjaChanged();
    partial void OnKredyt_utworzyłChanging(System.Nullable<int> value);
    partial void OnKredyt_utworzyłChanged();
    partial void OnzaznaczonyChanging(bool value);
    partial void OnzaznaczonyChanged();
    partial void OnaktywnyChanging(System.Nullable<bool> value);
    partial void OnaktywnyChanged();
    #endregion
		
		public Rodzaje_kredytów()
		{
			this._Kredyty = new EntitySet<Kredyty>(new Action<Kredyty>(this.attach_Kredyty), new Action<Kredyty>(this.detach_Kredyty));
			this._Pracownicy = default(EntityRef<Pracownicy>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Id rodzaju kredytu]", Storage="_Id_rodzaju_kredytu", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_rodzaju_kredytu
		{
			get
			{
				return this._Id_rodzaju_kredytu;
			}
			set
			{
				if ((this._Id_rodzaju_kredytu != value))
				{
					this.OnId_rodzaju_kredytuChanging(value);
					this.SendPropertyChanging();
					this._Id_rodzaju_kredytu = value;
					this.SendPropertyChanged("Id_rodzaju_kredytu");
					this.OnId_rodzaju_kredytuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwa", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Nazwa
		{
			get
			{
				return this._Nazwa;
			}
			set
			{
				if ((this._Nazwa != value))
				{
					this.OnNazwaChanging(value);
					this.SendPropertyChanging();
					this._Nazwa = value;
					this.SendPropertyChanged("Nazwa");
					this.OnNazwaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Oprocentowanie", DbType="Real NOT NULL")]
		public float Oprocentowanie
		{
			get
			{
				return this._Oprocentowanie;
			}
			set
			{
				if ((this._Oprocentowanie != value))
				{
					this.OnOprocentowanieChanging(value);
					this.SendPropertyChanging();
					this._Oprocentowanie = value;
					this.SendPropertyChanged("Oprocentowanie");
					this.OnOprocentowanieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Okres kredytowania(w mies.)]", Storage="_Okres_kredytowania_w_mies__", DbType="Int NOT NULL")]
		public int Okres_kredytowania_w_mies__
		{
			get
			{
				return this._Okres_kredytowania_w_mies__;
			}
			set
			{
				if ((this._Okres_kredytowania_w_mies__ != value))
				{
					this.OnOkres_kredytowania_w_mies__Changing(value);
					this.SendPropertyChanging();
					this._Okres_kredytowania_w_mies__ = value;
					this.SendPropertyChanged("Okres_kredytowania_w_mies__");
					this.OnOkres_kredytowania_w_mies__Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prowizja", DbType="Real NOT NULL")]
		public float Prowizja
		{
			get
			{
				return this._Prowizja;
			}
			set
			{
				if ((this._Prowizja != value))
				{
					this.OnProwizjaChanging(value);
					this.SendPropertyChanging();
					this._Prowizja = value;
					this.SendPropertyChanged("Prowizja");
					this.OnProwizjaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Kredyt utworzył]", Storage="_Kredyt_utworzył", DbType="Int")]
		public System.Nullable<int> Kredyt_utworzył
		{
			get
			{
				return this._Kredyt_utworzył;
			}
			set
			{
				if ((this._Kredyt_utworzył != value))
				{
					this.OnKredyt_utworzyłChanging(value);
					this.SendPropertyChanging();
					this._Kredyt_utworzył = value;
					this.SendPropertyChanged("Kredyt_utworzył");
					this.OnKredyt_utworzyłChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zaznaczony", DbType="Bit NOT NULL")]
		public bool zaznaczony
		{
			get
			{
				return this._zaznaczony;
			}
			set
			{
				if ((this._zaznaczony != value))
				{
					this.OnzaznaczonyChanging(value);
					this.SendPropertyChanging();
					this._zaznaczony = value;
					this.SendPropertyChanged("zaznaczony");
					this.OnzaznaczonyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aktywny", DbType="Bit")]
		public System.Nullable<bool> aktywny
		{
			get
			{
				return this._aktywny;
			}
			set
			{
				if ((this._aktywny != value))
				{
					this.OnaktywnyChanging(value);
					this.SendPropertyChanging();
					this._aktywny = value;
					this.SendPropertyChanged("aktywny");
					this.OnaktywnyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rodzaje_kredytów_Kredyty", Storage="_Kredyty", ThisKey="Id_rodzaju_kredytu", OtherKey="Rodzaj_kredytu")]
		public EntitySet<Kredyty> Kredyty
		{
			get
			{
				return this._Kredyty;
			}
			set
			{
				this._Kredyty.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pracownicy_Rodzaje_kredytów", Storage="_Pracownicy", ThisKey="Kredyt_utworzył", OtherKey="Id_Pracownika", IsForeignKey=true, DeleteRule="SET NULL")]
		public Pracownicy Pracownicy
		{
			get
			{
				return this._Pracownicy.Entity;
			}
			set
			{
				Pracownicy previousValue = this._Pracownicy.Entity;
				if (((previousValue != value) 
							|| (this._Pracownicy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pracownicy.Entity = null;
						previousValue.Rodzaje_kredytów.Remove(this);
					}
					this._Pracownicy.Entity = value;
					if ((value != null))
					{
						value.Rodzaje_kredytów.Add(this);
						this._Kredyt_utworzył = value.Id_Pracownika;
					}
					else
					{
						this._Kredyt_utworzył = default(Nullable<int>);
					}
					this.SendPropertyChanged("Pracownicy");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Kredyty(Kredyty entity)
		{
			this.SendPropertyChanging();
			entity.Rodzaje_kredytów = this;
		}
		
		private void detach_Kredyty(Kredyty entity)
		{
			this.SendPropertyChanging();
			entity.Rodzaje_kredytów = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Rodzaje lokat]")]
	public partial class Rodzaje_lokat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_rodzaju_lokaty;
		
		private string _Nazwa;
		
		private float _Oprocentowanie;
		
		private int _Okres_w_mies__;
		
		private float _Prowizja;
		
		private System.Nullable<int> _Lokatę_utworzył;
		
		private bool _zaznaczony;
		
		private System.Nullable<bool> _aktywny;
		
		private EntitySet<Lokaty> _Lokaty;
		
		private EntityRef<Pracownicy> _Pracownicy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_rodzaju_lokatyChanging(int value);
    partial void OnId_rodzaju_lokatyChanged();
    partial void OnNazwaChanging(string value);
    partial void OnNazwaChanged();
    partial void OnOprocentowanieChanging(float value);
    partial void OnOprocentowanieChanged();
    partial void OnOkres_w_mies__Changing(int value);
    partial void OnOkres_w_mies__Changed();
    partial void OnProwizjaChanging(float value);
    partial void OnProwizjaChanged();
    partial void OnLokatę_utworzyłChanging(System.Nullable<int> value);
    partial void OnLokatę_utworzyłChanged();
    partial void OnzaznaczonyChanging(bool value);
    partial void OnzaznaczonyChanged();
    partial void OnaktywnyChanging(System.Nullable<bool> value);
    partial void OnaktywnyChanged();
    #endregion
		
		public Rodzaje_lokat()
		{
			this._Lokaty = new EntitySet<Lokaty>(new Action<Lokaty>(this.attach_Lokaty), new Action<Lokaty>(this.detach_Lokaty));
			this._Pracownicy = default(EntityRef<Pracownicy>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Id rodzaju lokaty]", Storage="_Id_rodzaju_lokaty", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_rodzaju_lokaty
		{
			get
			{
				return this._Id_rodzaju_lokaty;
			}
			set
			{
				if ((this._Id_rodzaju_lokaty != value))
				{
					this.OnId_rodzaju_lokatyChanging(value);
					this.SendPropertyChanging();
					this._Id_rodzaju_lokaty = value;
					this.SendPropertyChanged("Id_rodzaju_lokaty");
					this.OnId_rodzaju_lokatyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwa", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Nazwa
		{
			get
			{
				return this._Nazwa;
			}
			set
			{
				if ((this._Nazwa != value))
				{
					this.OnNazwaChanging(value);
					this.SendPropertyChanging();
					this._Nazwa = value;
					this.SendPropertyChanged("Nazwa");
					this.OnNazwaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Oprocentowanie", DbType="Real NOT NULL")]
		public float Oprocentowanie
		{
			get
			{
				return this._Oprocentowanie;
			}
			set
			{
				if ((this._Oprocentowanie != value))
				{
					this.OnOprocentowanieChanging(value);
					this.SendPropertyChanging();
					this._Oprocentowanie = value;
					this.SendPropertyChanged("Oprocentowanie");
					this.OnOprocentowanieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Okres(w mies.)]", Storage="_Okres_w_mies__", DbType="Int NOT NULL")]
		public int Okres_w_mies__
		{
			get
			{
				return this._Okres_w_mies__;
			}
			set
			{
				if ((this._Okres_w_mies__ != value))
				{
					this.OnOkres_w_mies__Changing(value);
					this.SendPropertyChanging();
					this._Okres_w_mies__ = value;
					this.SendPropertyChanged("Okres_w_mies__");
					this.OnOkres_w_mies__Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prowizja", DbType="Real NOT NULL")]
		public float Prowizja
		{
			get
			{
				return this._Prowizja;
			}
			set
			{
				if ((this._Prowizja != value))
				{
					this.OnProwizjaChanging(value);
					this.SendPropertyChanging();
					this._Prowizja = value;
					this.SendPropertyChanged("Prowizja");
					this.OnProwizjaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Lokatę utworzył]", Storage="_Lokatę_utworzył", DbType="Int")]
		public System.Nullable<int> Lokatę_utworzył
		{
			get
			{
				return this._Lokatę_utworzył;
			}
			set
			{
				if ((this._Lokatę_utworzył != value))
				{
					this.OnLokatę_utworzyłChanging(value);
					this.SendPropertyChanging();
					this._Lokatę_utworzył = value;
					this.SendPropertyChanged("Lokatę_utworzył");
					this.OnLokatę_utworzyłChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zaznaczony", DbType="Bit NOT NULL")]
		public bool zaznaczony
		{
			get
			{
				return this._zaznaczony;
			}
			set
			{
				if ((this._zaznaczony != value))
				{
					this.OnzaznaczonyChanging(value);
					this.SendPropertyChanging();
					this._zaznaczony = value;
					this.SendPropertyChanged("zaznaczony");
					this.OnzaznaczonyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aktywny", DbType="Bit")]
		public System.Nullable<bool> aktywny
		{
			get
			{
				return this._aktywny;
			}
			set
			{
				if ((this._aktywny != value))
				{
					this.OnaktywnyChanging(value);
					this.SendPropertyChanging();
					this._aktywny = value;
					this.SendPropertyChanged("aktywny");
					this.OnaktywnyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rodzaje_lokat_Lokaty", Storage="_Lokaty", ThisKey="Id_rodzaju_lokaty", OtherKey="Id_Rodzaju_lokaty")]
		public EntitySet<Lokaty> Lokaty
		{
			get
			{
				return this._Lokaty;
			}
			set
			{
				this._Lokaty.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pracownicy_Rodzaje_lokat", Storage="_Pracownicy", ThisKey="Lokatę_utworzył", OtherKey="Id_Pracownika", IsForeignKey=true, DeleteRule="SET NULL")]
		public Pracownicy Pracownicy
		{
			get
			{
				return this._Pracownicy.Entity;
			}
			set
			{
				Pracownicy previousValue = this._Pracownicy.Entity;
				if (((previousValue != value) 
							|| (this._Pracownicy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pracownicy.Entity = null;
						previousValue.Rodzaje_lokat.Remove(this);
					}
					this._Pracownicy.Entity = value;
					if ((value != null))
					{
						value.Rodzaje_lokat.Add(this);
						this._Lokatę_utworzył = value.Id_Pracownika;
					}
					else
					{
						this._Lokatę_utworzył = default(Nullable<int>);
					}
					this.SendPropertyChanged("Pracownicy");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Lokaty(Lokaty entity)
		{
			this.SendPropertyChanging();
			entity.Rodzaje_lokat = this;
		}
		
		private void detach_Lokaty(Lokaty entity)
		{
			this.SendPropertyChanging();
			entity.Rodzaje_lokat = null;
		}
	}
}
#pragma warning restore 1591
